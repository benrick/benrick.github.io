---
layout: post
title: "Making Web Requests in Medium Trust"
date: 2010-07-29 11:03:00 -0400
comments: true
published: true
categories: ["blog", "archives"]
tags: ["Blog"]
alias: ["/post/making-web-requests-in-medium-trust"]
---
<!-- more -->
{% include imported_disclaimer.html %}
<p>Trust levels in web development can be a pain in the rear. As a developer, I tend to not like them, because when they’re important it means that my options are being restricted. I am often required to perform extra work to complete the same tasks I would be performing elsewhere. </p>  <p>Medium trust is the trust level commonly used by web hosting companies, because it gives them a good balance of security and options. Ideally, as a programmer I can work in full trust, which allows me to do pretty much anything I want. That is, however, not at all what shared hosting requires. They need some extra added security.</p>  <p>Generally we develop for medium trust when we are either on a medium trust hoster or are working on a program which could be hosted in many places (including shared hosting).</p>  <p>For a project on which I am currently working, we needed to bypass some restrictions of medium trust to allow us to make an external request to a web service on another domain. Doing this will cause a security exception at run time. Keep in mind that the trust level can be violated when the site compiles, because certain things cannot be used at all in medium trust. In this case, it is our external service which caused the issue. I believe you could also have an issue if you’re running a web farm.</p>  <p>So how do we get around it?</p>  <p>We need to set up our trust element in the web.config file and hope that the hosting company is not overriding the use of this work-around. If the hoster is blocking this trick then you will want to see if you can resolve the issue using proxies. Some hosting companies will work with you to get your application running as long as it is not a security risk for them.</p>  <p>The key is the “originUrl” property of the trust element. We need to set that using a regular expression to define which URL we want to use. You should try to be more specific with the regular expression, but “.*” is still OK. That one will basically say any combination of any characters is OK. If we want to be more specific we might say that since our web service calls are all on the same domain we could use something like this “http://www.mywebservicedomain.com/.*”, and this would allow anything on that site.</p>  <div id="codeSnippetWrapper">   <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet"><span style="color: #0000ff">&lt;</span><span style="color: #800000">trust</span> <span style="color: #ff0000">level</span><span style="color: #0000ff">="Medium"</span> <span style="color: #ff0000">originUrl</span><span style="color: #0000ff">=".*"</span> <span style="color: #0000ff">/&gt;</span><br><span style="color: #008000">&lt;!-- or this --&gt;</span><br><span style="color: #0000ff">&lt;</span><span style="color: #800000">trust</span> <span style="color: #ff0000">level</span><span style="color: #0000ff">="Medium"</span> <span style="color: #ff0000">originUrl</span><span style="color: #0000ff">="http://mywebservicedomain.com/.*"</span> <span style="color: #0000ff">/&gt;</span></pre>

  <br></div>

<p>If you need it, you can use this <a href="http://regexlib.com/CheatSheet.aspx" target="_blank">Regular Expression Cheat Sheet</a> and this <a href="http://regexlib.com/RETester.aspx" target="_blank">Regular Expression Tester</a>.</p>
