---
layout: post
title: "TODO Comments - Code Audits #9"
date: 2012-07-13 10:00:00 -0400
comments: true
published: true
categories: ["blog", "archives"]
tags: ["Blog"]
permalink: "/post/TODO-Comments-Code-Audits-9/"
---
<!-- more -->

<p>When writing software, we often have to write comments to explain why we did something.&nbsp; I try to write my code such that I don’t have to comment it. In fact, anything other than a temporary (less than a few minutes) comment I write, I consider to mean that I made a mistake.</p>  <p>We could get into endless discussions of when we should comment, what we should comment, and how much we should comment. I’ve had plenty of discussions about comments with people with various opinions on the subject.</p>  <p>An interesting feature of <a href="http://msdn.microsoft.com/en-us/library/zce12xx2(v=vs.100).aspx" target="_blank">Visual Studio is that it lets you create a list of “tasks”</a> by leaving yourself comments that begin with “TODO” or “HACK”. In some ways I like those comments, because they build into the code reasons for why the code is the way it is.</p>  <p>If you write “TODO”, it tells the reader that the code is incomplete and that wasn’t intentionally left the way it is. There just wasn’t enough time. If you write “HACK”, it admits that you wrote the code badly and it needs to be rewritten. </p>  <p>These types of comments fit in very well with what I tell people about comments. Each one I write and leave in the codebase means that I didn’t write the code as well as I wanted to. Each one is my mistake. The more comments I write, the worse the code is.</p>  <h3>The Bad</h3>  <p>One codebase that I was working on had a lot of these comments. It seemed they were all over the codebase. There was the other problem that copy-paste coding was rampant, so I am sure that many of these were copied and pasted from previous locations. Heck some of the even said to remove the duplication. The irony? Those comments about removing the duplication were copied with each new instance of the code that was copied.</p>  <p>I checked Visual Studio’s task list of these comments just to see how bad it was.</p>  <p>1131. 1131 tasks that were indicated with “TODO” and “HACK” comments. That takes more than just writing a lot of these comments. That requires writing them and <em>never</em> going back to fix them or complete them.</p>  <h3>The Better</h3>  <p>Check your codebase right now. Do you have any of these comments lying around? Is it only a handful? If so, you should go try to clean them up. That’s easy and will help you out down the road.</p>  <p>Anytime that you’re going to write a “TODO” comment, think about why you’re putting it there? Is it something that’s really needed? If so, make yourself a note somewhere else. Add a story to go back and make the change later. Get it in the system where you <em>really</em> track your work.</p>  <p>If you know that you’re not going to get to it any time soon, don’t bother with the comment. It will only clutter up your system. If it’s not important enough for you to come back and get it soon, why are you even recording it? If it’s important later, you will be working in that part of the codebase again and you can <a href="/post/Boy-Scout-Rule.aspx" target="_blank">go back later and fix the code</a> as part of your other work.</p>  <p>Certainly once you get that many of the comments, you should have long earlier realized that there is something that you need to work on. That’s just a ridiculous number of TODO and HACK comments for one codebase. </p>  <p>Has anyone ever see more than that? Anyone think I am crazy or wrong? Tell me about it in the comments!</p>  <h3>More Code Audit Nuggets</h3>  <p>Keep watching for more interesting nuggets of stuff that I’ve seen in codebases.</p>
